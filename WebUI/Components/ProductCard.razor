@using WebUI.Models
@using WebUI.Services
@inject NavigationManager Navigation
@inject CartService CartService
@inject IJSRuntime JSRuntime

<!-- Product Card Component with Bootstrap -->
<div class="card h-100 shadow-sm border-0 product-card-bootstrap" style="cursor: pointer; transition: all 0.3s ease;" @onclick="OnProductClick">
    <div class="position-relative overflow-hidden">
        @if (Product.HasBadge)
        {
            <span class="badge position-absolute top-0 start-0 m-2 z-3 @(Product.IsSale ? "bg-danger" : "bg-primary")">
                @Product.Badge
            </span>
        }
        
        <img src="@Product.ImageUrl" 
             alt="@Product.Name" 
             class="card-img-top img-fluid"
             style="height: 250px; object-fit: cover;"
             onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';" />
        
        <div class="d-none align-items-center justify-content-center bg-light" 
             style="height: 250px; font-size: 60px;">
            üëü
        </div>

        <!-- Action Buttons Overlay -->
        <div class="position-absolute top-50 start-50 translate-middle opacity-0 card-overlay-bootstrap" 
             style="transition: opacity 0.3s ease;">
            <div class="d-flex gap-2">
                <button class="btn btn-primary btn-sm rounded-circle p-2" 
                        @onclick="OnQuickViewClick" 
                        @onclick:stopPropagation="true" 
                        title="Quick View"
                        style="width: 40px; height: 40px;">
                    <i class="fas fa-eye"></i>
                </button>
                <button class="btn btn-success btn-sm rounded-circle p-2" 
                        @onclick="OnAddToCartClick" 
                        @onclick:stopPropagation="true" 
                        title="Add to Cart"
                        style="width: 40px; height: 40px;">
                    <i class="fas fa-shopping-cart"></i>
                </button>
                <button class="btn btn-outline-danger btn-sm rounded-circle p-2" 
                        @onclick="OnWishlistClick" 
                        @onclick:stopPropagation="true" 
                        title="Add to Wishlist"
                        style="width: 40px; height: 40px;">
                    <i class="far fa-heart"></i>
                </button>
            </div>
        </div>
    </div>

    <div class="card-body d-flex flex-column">
        <div class="text-muted small mb-1">@Product.Brand</div>
        <h6 class="card-title text-truncate mb-2" title="@Product.Name">@Product.Name</h6>
        <div class="mt-auto">
            <div class="d-flex align-items-center gap-2 flex-wrap">
                <span class="fw-bold text-primary fs-6">@Product.PriceFormatted</span>
                @if (Product.OriginalPrice.HasValue)
                {
                    <span class="text-decoration-line-through text-muted small">@Product.OldPriceFormatted</span>
                }
                @if (!string.IsNullOrEmpty(Product.Discount))
                {
                    <span class="badge bg-danger small">@Product.Discount</span>
                }
            </div>
        </div>
    </div>
</div>

<!-- Size Color Selection Modal -->
<SizeColorSelectionModal Product="Product" 
                        IsVisible="ShowModal" 
                        OnClose="CloseModal"
                        OnAddToCart="OnModalAddToCart" />

<style>
    .product-card-bootstrap:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
    }
    
    .product-card-bootstrap:hover .card-overlay-bootstrap {
        opacity: 1 !important;
    }
    
    .product-card-bootstrap .card-overlay-bootstrap {
        backdrop-filter: blur(2px);
        background: rgba(255, 255, 255, 0.9);
        border-radius: 10px;
        padding: 10px;
    }

    /* Toast animations */
    @@keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }

    @@keyframes slideOutRight {
        from {
            transform: translateX(0);
            opacity: 1;
        }
        to {
            transform: translateX(100%);
            opacity: 0;
        }
    }
</style>

@code {
    [Parameter] public Product Product { get; set; } = new();
    [Parameter] public EventCallback<Product> OnProductSelected { get; set; }
    [Parameter] public EventCallback<Product> OnQuickView { get; set; }

    private bool ShowModal = false;

    private async Task OnProductClick()
    {
        // Navigate to product detail page
        Navigation.NavigateTo($"/product/{Product.Id}");
        await OnProductSelected.InvokeAsync(Product);
    }

    private async Task OnQuickViewClick()
    {
        // Navigate to product detail page
        Navigation.NavigateTo($"/product/{Product.Id}");
        await OnQuickView.InvokeAsync(Product);
    }

    private async Task OnAddToCartClick()
    {
        // Show modal for size/color selection
        ShowModal = true;
        StateHasChanged();
    }

    private async Task CloseModal()
    {
        ShowModal = false;
        StateHasChanged();
    }

    private async Task OnModalAddToCart(string message)
    {
        // Show success toast notification
        await JSRuntime.InvokeVoidAsync("eval", $@"
            (function() {{
                let toast = document.createElement('div');
                toast.innerHTML = '<i class=""fas fa-check-circle me-2""></i>{message}';
                toast.style.cssText = 'position:fixed;top:20px;right:20px;background:linear-gradient(135deg, #4CAF50, #45a049);color:white;padding:16px 24px;border-radius:12px;z-index:9999;font-weight:600;box-shadow:0 8px 24px rgba(0,0,0,0.15);display:flex;align-items:center;gap:8px;font-size:14px;animation: slideInRight 0.4s cubic-bezier(0.4, 0, 0.2, 1);';
                document.body.appendChild(toast);
                setTimeout(function() {{
                    toast.style.animation = 'slideOutRight 0.4s cubic-bezier(0.4, 0, 0.2, 1)';
                    setTimeout(function() {{ toast.remove(); }}, 400);
                }}, 2500);
            }})();
        ");
    }

    private async Task OnWishlistClick()
    {
        // Add to wishlist with toast notification
        await JSRuntime.InvokeVoidAsync("eval", $@"
            (function() {{
                let toast = document.createElement('div');
                toast.innerHTML = '<i class=""fas fa-heart me-2""></i>ƒê√£ th√™m ""{Product.Name}"" v√†o danh s√°ch y√™u th√≠ch!';
                toast.style.cssText = 'position:fixed;top:20px;right:20px;background:linear-gradient(135deg, #FF6B6B, #FF5252);color:white;padding:16px 24px;border-radius:12px;z-index:9999;font-weight:600;box-shadow:0 8px 24px rgba(0,0,0,0.15);display:flex;align-items:center;gap:8px;font-size:14px;animation: slideInRight 0.4s cubic-bezier(0.4, 0, 0.2, 1);';
                document.body.appendChild(toast);
                setTimeout(function() {{
                    toast.style.animation = 'slideOutRight 0.4s cubic-bezier(0.4, 0, 0.2, 1)';
                    setTimeout(function() {{ toast.remove(); }}, 400);
                }}, 2500);
            }})();
        ");
    }
}